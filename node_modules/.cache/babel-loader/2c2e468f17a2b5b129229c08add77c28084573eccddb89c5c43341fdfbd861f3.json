{"ast":null,"code":"var _jsxFileName = \"/Users/alihadwan/Documents/ComputerSicence/webDevelopnment(angla)/Frontend/React/KeperApp-project/src/components/Note.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        return props.onDelete(props.id);\n      },\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Note;\nexport default Note;\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Note","props","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","onDelete","id","_c","$RefreshReg$"],"sources":["/Users/alihadwan/Documents/ComputerSicence/webDevelopnment(angla)/Frontend/React/KeperApp-project/src/components/Note.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction Note(props) {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      {/* //<p>{props.id}</p> */}\n      {/* //calling the onDelete function from the app */}\n      <button\n        onClick={() => {\n          return props.onDelete(props.id);\n        }}\n      >\n        DELETE\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAACC,KAAK,EAAE;EACnB,oBACEF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBJ,OAAA;MAAAI,QAAA,EAAKF,KAAK,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBT,OAAA;MAAAI,QAAA,EAAIF,KAAK,CAACQ;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtBT,OAAA;MACEW,OAAO,EAAEA,CAAA,KAAM;QACb,OAAOT,KAAK,CAACU,QAAQ,CAACV,KAAK,CAACW,EAAE,CAAC;MACjC,CAAE;MAAAT,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACK,EAAA,GAhBQb,IAAI;AAkBb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}