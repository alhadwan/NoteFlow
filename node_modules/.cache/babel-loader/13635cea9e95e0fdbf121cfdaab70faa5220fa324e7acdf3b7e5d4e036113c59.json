{"ast":null,"code":"var _jsxFileName = \"/Users/alihadwan/Documents/ComputerSicence/webDevelopnment(angla)/Frontend/React/KeperApp-project/src/components/ThemeToggle.jsx\";\nimport React, { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThemeToggle(_ref) {\n  let {\n    mode,\n    setMode\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    checked: mode === \"dark\",\n    onChange: () => setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useState","createTheme","ThemeProvider","jsxDEV","_jsxDEV","ThemeToggle","_ref","mode","setMode","Switch","checked","onChange","prevMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alihadwan/Documents/ComputerSicence/webDevelopnment(angla)/Frontend/React/KeperApp-project/src/components/ThemeToggle.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\n\n\nfunction ThemeToggle({ mode, setMode }) {\n    return(\n       \n    <Switch\n  checked={mode === \"dark\"}\n  onChange={() => setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"))}\n/>\n);\n    \n \n}\n\nexport default ThemeToggle;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlE,SAASC,WAAWA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAClC,oBAEAF,OAAA,CAACK,MAAM;IACTC,OAAO,EAAEH,IAAI,KAAK,MAAO;IACzBI,QAAQ,EAAEA,CAAA,KAAMH,OAAO,CAAEI,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAIF;AAACC,EAAA,GAVQZ,WAAW;AAYpB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}